<?php
/**
 * @file
 * CultureFeed Calendar allows users to manage their own events in a calendar.
 */

require_once 'includes/helpers.inc';

define('CULTUREFEED_CALENDAR_EVENT_STARTED', 'started');
define('CULTUREFEED_CALENDAR_EVENT_FINISHED', 'finished');
define('CULTUREFEED_CALENDAR_EVENT_PLANNABLE', 'plannable');

/**
 * Implements hook_init().
 */
function culturefeed_calendar_init() {
  if (!culturefeed_is_culturefeed_user()) {
    drupal_add_library('system', 'jquery.cookie');
    drupal_add_js(drupal_get_path('module', 'culturefeed_calendar') . '/js/culturefeed_calendar.js');
  }
  drupal_add_js(drupal_get_path('module', 'culturefeed_calendar') . '/js/clipboard.min.js');
  drupal_add_js(drupal_get_path('module', 'culturefeed_calendar') . '/js/culturefeed_calendar_clipboard.js');

}

/**
 * Implements hook_menu().
 */
function culturefeed_calendar_menu() {

  $items = array();

  $items['admin/config/culturefeed/calendar'] = array(
    'title' => 'CultureFeed Calendar',
    'description' => 'Change CultureFeed Calendar Settings',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('culturefeed_calendar_admin_settings'),
    'access arguments' => array('administer site configuration'),
    'file' => 'includes/admin.inc',
  );
  $items['culturefeed/calendar'] = array(
    'page callback' => 'culturefeed_calendar_page_my_activities',
    'access arguments' => array('access content'),
    'file' => 'includes/pages.inc',
    'type' => MENU_CALLBACK,
  );
  $items['culturefeed/calendar/share'] = array(
    'title' => t('Share your calendar'),
    'page callback' => 'culturefeed_calendar_page_share_my_calendar',
    'access arguments' => array('access content'),
    'file' => 'includes/pages.inc',
    'type' => MENU_CALLBACK,
  );
  $items['culturefeed/calendar/settings'] = array(
    'title' => t('Calendar Settings'),
    'page callback' => 'culturefeed_calendar_page_settings',
    'access arguments' => array('access content'),
    'file' => 'includes/pages.inc',
    'type' => MENU_CALLBACK,
  );
  $items['culturefeed/calendar/%'] = array(
    'page callback' => 'culturefeed_calendar_page_user_activities',
    'page arguments' => array(2),
    'access arguments' => array('access content'),
    'file' => 'includes/pages.inc',
    'type' => MENU_CALLBACK,
  );
  $items['culturefeed/calendar/add/%culturefeed_agenda_event/%'] = array(
    'title' => t('Add to calendar'),
    'page callback' => 'culturefeed_calendar_add_to_calendar',
    'page arguments' => array(3, 4),
    'access arguments' => array('access content'),
    'file' => 'includes/pages.inc',
    'type' => MENU_CALLBACK,
  );
  $items['culturefeed/calendar/like/%culturefeed_agenda_event/%'] = array(
    'title' => t('I\'m interested'),
    'page callback' => 'culturefeed_calendar_like',
    'page arguments' => array(3, 4),
    'access arguments' => array('access content'),
    'file' => 'includes/pages.inc',
    'type' => MENU_CALLBACK,
  );
  $items['culturefeed/calendar/edit/%culturefeed_calendar_activity/%'] = array(
    'title' => t('Edit event in calendar'),
    'page callback' => 'culturefeed_calendar_edit_calendar_event',
    'page arguments' => array(3, 4),
    'access arguments' => array('access content'),
    'file' => 'includes/pages.inc',
    'type' => MENU_CALLBACK,
  );
  $items['culturefeed/calendar/delete/%culturefeed_calendar_activity/%'] = array(
    'title' => t('Delete event from calendar'),
    'page callback' => 'culturefeed_calendar_delete_calendar_event',
    'page arguments' => array(3, 4),
    'access arguments' => array('access content'),
    'file' => 'includes/pages.inc',
    'type' => MENU_CALLBACK,
  );

  return $items;
}

/**
 * Implements hook_theme().
 */
function culturefeed_calendar_theme() {

  $items = array();

  $path = drupal_get_path('module', 'culturefeed_calendar') . '/theme';

  $items['culturefeed_calendar_button'] = array(
    'path' => $path,
    'file' => 'theme.inc',
    'template' => 'culturefeed-calendar-button',
    'variables' => array(
      'button' => array(),
      'authenticated' => FALSE,
      'status' => CULTUREFEED_CALENDAR_EVENT_PLANNABLE,
    ),
  );
  $items['culturefeed_calendar_profile_box_item'] = array(
    'variables' => array(),
    'path' => $path,
    'file' => 'theme.inc',
  );
  $items['culturefeed_calendar_page'] = array(
    'variables' => array(
      'activities' => NULL
    ),
    'template' => 'culturefeed-calendar-page',
    'path' => $path,
    'file' => 'theme.inc',
  );
  $items['culturefeed_calendar_activity_summary'] = array(
    'path' => $path,
    'file' => 'theme.inc',
    'template' => 'culturefeed-calendar-activity-summary',
    'variables' => array(
      'activity' => NULL
    ),
  );
  $items['culturefeed_calendar_activity_mini'] = array(
    'path' => $path,
    'file' => 'theme.inc',
    'template' => 'culturefeed-calendar-activity-mini',
    'variables' => array(
      'activity' => NULL
    ),
  );
  $items['culturefeed_calendar_activities_going'] = array(
    'path' => $path,
    'file' => 'theme.inc',
    'template' => 'culturefeed-calendar-activities-going',
    'variables' => array(
      'activities' => NULL,
      'month_names' => array(),
    ),
  );
  $items['culturefeed_calendar_activities_liked'] = array(
    'path' => $path,
    'file' => 'theme.inc',
    'template' => 'culturefeed-calendar-activities-liked',
    'variables' => array(
      'activities' => NULL
    ),
  );
  $items['culturefeed_calendar_nav_months'] = array(
    'path' => $path,
    'file' => 'theme.inc',
    'template' => 'culturefeed-calendar-nav-months',
    'variables' => array(
      'activities' => NULL
    ),
  );
  $items['culturefeed_calendar_button_hover'] = array(
    'path' => $path,
    'file' => 'theme.inc',
    'template' => 'culturefeed-calendar-button-hover',
    'variables' => array(),
  );
  $items['culturefeed_calendar_share_page'] = array(
    'path' => $path,
    'file' => 'theme.inc',
    'variables' => array(),
    'template' => 'culturefeed-calendar-share-page',
  );
  $items['culturefeed_calendar_settings_page'] = array(
    'path' => $path,
    'file' => 'theme.inc',
    'variables' => array(
      'settings_form' => array(),
    ),
    'template' => 'culturefeed-calendar-settings-page',
  );

  return $items;

}

/**
 * Implements hook_user_login().
 */
function culturefeed_calendar_user_login(&$edit, $account) {

  $user_id = DrupalCultureFeed::getLoggedInUserId();
  // Stop if we don't have a user id.
  if (empty($user_id)) {
    return;
  }

  //Get activities from cookie
  $cookie_activities = array();
  if (isset($_COOKIE['Drupal_visitor_calendar'])) {
    $cookie_activities = json_decode($_COOKIE['Drupal_visitor_calendar']);
    if (!is_array($cookie_activities)) {
      return;
    }
  }
  else {
    return;
  }

  // Get activities from calendar.
  $calendar_ids = array();
  $calendar_activities = culturefeed_calendar_get_user_activities();
  foreach ($calendar_activities->objects as $calendar_activity) {
    $calendar_ids[] = $calendar_activity->nodeId;
  }

  // Create a culturefeed activity (CultureFeed_Activity()) for each cookie activity (stdClass).
  $added = 0;
  foreach ($cookie_activities as $key => $cookie_activity) {
    // Only create activities that don't already exist.
    if (!in_array($cookie_activity->nodeId, $calendar_ids)) {
      $activity = new CultureFeed_Activity();
      if (isset($cookie_activity->value)) {
        $activity->value = $cookie_activity->value;
      }
      // Add planned activity's' date.
      if (isset($cookie_activity->calendarDate)) {
        $activity->calendarDate = $cookie_activity->calendarDate;
      }
      $activity->type = $cookie_activity->type;
      $activity->contentType = 'event';
      $activity->nodeId = $cookie_activity->nodeId;
      $activity->nodeTitle = culturefeed_search_item_load($activity->nodeId, 'event')->getTitle(culturefeed_search_get_preferred_language());
      $activity->userId = $user_id;

      DrupalCultureFeed::createActivity($activity);

      $added++;
    }
  }

  // Delete the cookie.
  user_cookie_delete('calendar');

  // Add a timeout of 2 second, this gives index the time to place the new activity into the search index.
  // sleep(2);

  if ($added > 0) {
    sleep(2);
    drupal_set_message(t('The items are saved to your calendar.'), 'status');
  }


}

/**
 * Implements hook_culturefeed_ui_profile_menu().
 */
function culturefeed_calendar_culturefeed_ui_profile_menu() {
	return array(
		'calendar' => array(
			'title' => t('My calendar'),
			'url' => 'culturefeed/calendar',
			'description' => t('Manage your favorite events in your personal calendar'),
			'weight' => 5,
		),
	);
}

/**
 * Implements hook_culturefeed_ui_profile_box_dropdown_items().
 */
function culturefeed_calendar_culturefeed_ui_profile_box_dropdown_items() {
  $items = array();

  if (culturefeed_calendar_enabled()) {
    $items['calendar'] = array(
      'data' => l(t('My calendar'), 'culturefeed/calendar'),
      'class' => 'calendar',
      'weight' => -16,
    );
  }

  return $items;
}

/**
 * Implements hook_culturefeed_ui_profile_box_main_items().
 */
function culturefeed_calendar_culturefeed_ui_profile_box_main_items() {

  $items = array();

  $items['activities'] = array(
    'data' => theme('culturefeed_calendar_profile_box_item', array(
      'total' => 0,
    )),
    'class' => 'activities',
    'weight' => -10,
  );

  return $items;

}

/**
 * Implements hook_culturefeed_ui_anonymous_profile_box_main_items().
 */
function culturefeed_calendar_culturefeed_ui_anonymous_profile_box_main_items() {

  $items = array();

  // JS sets the real value, don't add total.
  $items['activities'] = array(
    'data' => theme('culturefeed_calendar_profile_box_item'),
    'class' => 'activities',
    'weight' => -10,
  );

  return $items;

}

/**
 * Load the calendar activity.
 */
function culturefeed_calendar_activity_load($activity_id) {

  // No uuid = anonymous user. Get it in the cookie.
  if (is_numeric($activity_id)) {

    if (isset($_COOKIE['Drupal_visitor_calendar'])) {
      $calendar = json_decode($_COOKIE['Drupal_visitor_calendar']);
      if (is_array($calendar) && isset($calendar[$activity_id])) {
        return $calendar[$activity_id];
      }
    }

  }
  // Uuid = load with API.
  else {
    try {
      return DrupalCultureFeed::loadActivity($activity_id);
    }
    catch (Exception $e) {
      watchdog_exception('culturefeed_calendar', $e);
    }

  }

  return FALSE;

}
