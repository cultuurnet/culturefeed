<?php
/**
 * @file
 * Creates a tool to subscribe to and construct mailings on CultureFeed.
 */

require_once('culturefeed_mailing.helpers.inc');

/**
 * Implements hook_permission
 */
function culturefeed_mailing_permission() {
  return array(
    'subscribe to mailings' => array(
      'title' => t('Subscribe to mailings'),
      'description' => t('Allows the user to subscribe to mailings'),
    ),
    'manage mailing lists' => array(
      'title' => t('Manage mailing lists'),
      'description' => t('Allows the user to manage mailing lists & templates'),
    ),
    'delete mail template' => array(
      'title' => t('Delete mail template'),
      'description' => t('Allows the user to delete mailing lists & templates'),
    ),
  );
}

/**
 * Implements hook_menu().
 */
function culturefeed_mailing_menu() {

  $items = array();

  $items['culturefeed/toggle/newsletter-optin/%/%/%'] = array(
    'title' => 'Newsletter opt-in',
    'page callback' => 'culturefeed_mailing_toggle_optin',
    'page arguments' => array(3, 4),
    'access callback' => 'culturefeed_is_culturefeed_user',
    'type' => MENU_CALLBACK,
    'file' => 'culturefeed_mailing.pages.inc',
  );

  $items['subscribe'] = array(
    'title' =>  'Subscribe to our newsletter',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('culturefeed_mailing_subscribe_form'),
    'access arguments' => array('subscribe to mailings'),
    'file' => 'culturefeed_mailing.pages.inc',
  );

  $items['subscribe/subscribed'] = array(
    'title' =>  'Subscribed to our newsletter',
    'page callback' => 'culturefeed_mailing_user_subscribed',
    'access arguments' => array('subscribe to mailings'),
    'file' => 'culturefeed_mailing.pages.inc',
  );

  $items['culturefeed/mailing'] = array(
    'title' => 'Newsletters',
    'page callback' => 'culturefeed_mailing_page_my_newsletters',
    'access callback' => 'culturefeed_is_culturefeed_user',
    'type' => MENU_CALLBACK,
    'file' => 'culturefeed_mailing.pages.inc',
  );

  // Configuration pages.
  $items['admin/config/culturefeed/mailing'] = array(
    'title' => 'CultureFeed Mailing',
    'description' => 'CultureFeed Mailing settings',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('culturefeed_mailing_admin_settings'),
    'access arguments' => array('administer site configuration'),
    'file' => 'culturefeed_mailing.admin.inc',
  );

  // Content management pages.
  $items['admin/content/mailing-lists'] = array(
    'title' => 'Mailing lists',
    'page callback' => 'culturefeed_mailing_lists_overview',
    'access arguments' => array('manage mailing lists'),
    'type' => MENU_LOCAL_TASK,
    'file' => 'culturefeed_mailing.pages.inc',
  );

  $items['admin/content/mailing-lists/add'] = array(
    'title' => 'Add mailing list',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('culturefeed_mailing_lists_form'),
    'access arguments' => array('manage mailing lists'),
    'type' => MENU_LOCAL_ACTION,
    'file' => 'culturefeed_mailing.pages.inc',
  );

  $items['admin/content/mailing-lists/edit/%culturefeed_mailing'] = array(
    'title' => 'Edit mailing list',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('culturefeed_mailing_lists_form', 4),
    'access arguments' => array('manage mailing lists'),
    'file' => 'culturefeed_mailing.pages.inc',
  );

  $items['admin/content/mailing-lists/test/%culturefeed_mailing'] = array(
    'title' => 'Test mailing list',
    'delivery callback' => 'ajax_deliver',
    'page callback' => 'culturefeed_mailing_test_list',
    'page arguments' => array(4),
    'access arguments' => array('manage mailing lists'),
    'file' => 'culturefeed_mailing.pages.inc',
    'type' => MENU_CALLBACK,
  );

  $items['admin/content/mailing-lists/send/%culturefeed_mailing'] = array(
    'title' => 'Activate mailing list',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('culturefeed_mailing_send_list_form', 4),
    'access arguments' => array('manage mailing lists'),
    'file' => 'culturefeed_mailing.pages.inc',
  );

  $items['admin/content/mailing-lists/disable/%culturefeed_mailing'] = array(
    'title' => 'Disable scheduled sending',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('culturefeed_mailing_disable_list_form', 4),
    'access arguments' => array('manage mailing lists'),
    'file' => 'culturefeed_mailing.pages.inc',
  );

  $items['admin/content/mailing-lists/delete/%culturefeed_mailing'] = array(
    'title' => 'Delete mailing',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('culturefeed_mailing_delete_form', 4),
    'access arguments' => array('delete mail template'),
    'file' => 'culturefeed_mailing.pages.inc',
  );

  $items['admin/content/templates'] = array(
    'title' => 'Templates',
    'page callback' => 'culturefeed_template_list_overview',
    'access arguments' => array('manage mailing lists'),
    'type' => MENU_LOCAL_TASK,
    'file' => 'culturefeed_mailing.pages.inc',
  );

  $items['admin/content/templates/add'] = array(
    'title' => 'Add template',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('culturefeed_templates_form'),
    'access arguments' => array('manage mailing lists'),
    'type' => MENU_LOCAL_ACTION,
    'file' => 'culturefeed_mailing.pages.inc',
  );

  $items['admin/content/templates/edit/%culturefeed_template'] = array(
    'title' => 'Edit template',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('culturefeed_templates_form', 4),
    'access arguments' => array('manage mailing lists'),
    'file' => 'culturefeed_mailing.pages.inc',
  );

  $items['admin/content/templates/delete/%culturefeed_template'] = array(
    'title' => 'Delete template',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('culturefeed_templates_delete_form', 4),
    'access arguments' => array('delete mail template'),
    'file' => 'culturefeed_mailing.pages.inc',
  );

  return $items;

}

/**
 * Implements hook_theme().
 */
function culturefeed_mailing_theme() {

  $path = drupal_get_path('module', 'culturefeed_mailing') . '/theme';

  return array(
    'culturefeed_mailing_optin' => array(
      'variables' => array('mailing_id' => 0),
      'path' => $path,
      'file' => 'theme.inc',
    ),
    'culturefeed_mailing_user_profile_admin' => array(
      'variables' => array('mailings' => array()),
      'template' => 'culturefeed-mailing-user-profile-admin',
      'path' => $path,
      'file' => 'theme.inc',
    ),
    'culturefeed_mailing_user_profile_admin_item' => array(
      'variables' => array('item' => NULL),
      'template' => 'culturefeed-mailing-user-profile-admin-item',
      'path' => $path,
      'file' => 'theme.inc',
    ),
  );
}


/**
 * Implements hook_block_info().
 */
function culturefeed_mailing_block_info() {

  $blocks = array();
  $blocks['newsletter_opt_in'] = array(
    'info' => t('Culturefeed mailings: Newsletter opt-in'),
    'cache' => DRUPAL_NO_CACHE,
  );

  $blocks['newsletter_form'] = array(
    'info' => t('Culturefeed mailings: Newsletter form'),
    'cache' => DRUPAL_NO_CACHE,
  );

  return $blocks;

}


/**
 * Implements hook_block_view().
 */
function culturefeed_mailing_block_view($delta) {

  module_load_include('inc', 'culturefeed_mailing', 'culturefeed_mailing.blocks');

  if (function_exists('culturefeed_mailing_block_' . $delta . '_is_visible')) {
    if (!call_user_func('culturefeed_mailing_block_' . $delta . '_is_visible')) {
      return FALSE;
    }
  }

  if (function_exists('culturefeed_mailing_block_' . $delta . '_view')) {
    return call_user_func('culturefeed_mailing_block_' . $delta . '_view');
  }

}

/**
 * Implements hook_culturefeed_ui_profile_menu().
 */
function culturefeed_mailing_culturefeed_ui_profile_menu() {

  return array(
    'emails' => array(
      'title' => "E-mails",
      'url' => 'culturefeed/mailing',
      'description' => t('Manage newsletters you can subscribe to'),
      'weight' => -16,
    ),
  );

}

/**
 * Subscribe a given user to a mailing.
 */
function culturefeed_mailing_subscribe_user($account, $mailing_id) {

  $already_subscribed = _culturefeed_mailing_check_user_subscription($account->id, $mailing_id);

  // If user is already subscribed, do nothing.
  if (!$already_subscribed) {
    DrupalCultureFeed::subscribeToMailing($account->id, $mailing_id);
    module_invoke_all('culturefeed_mailing_user_subscribed', $account);
  }

}

/**
 * Form callback: Show the newsletter form as a block.
 */
function culturefeed_mailing_newsletter_block_form() {

  $form = array();

  $form['mail'] = array(
    '#type' => 'textfield',
    '#title' => variable_get('culturefeed_mailing_block_description', ''),
    '#description' => t('Email address'),
    '#size' => 40,
    '#maxlength' => 255,
  );

  $form['inschrijven'] = array(
    '#type' => 'submit',
    '#value' => t('Subscribe'),
  );

  return $form;

}

/**
 * Submit the newsletter block form.
 */
function culturefeed_mailing_newsletter_block_form_submit($form, &$form_state) {

  if (DrupalCultureFeed::isCultureFeedUser()) {

    $form_state['redirect'] = array(
      'subscribe',
      array(
        'query' => array(
          'email' => $form_state['values']['mail'],
        ),
      ),
    );

  }
  else {

    $form_state['redirect'] = array(
      'authenticated',
      array(
        'query' => array(
          'email' => $form_state['values']['mail'],
          'destination' => 'subscribe',
        ),
      ),
    );

  }

}

/**
 * Load a culturefeed mailing.
 *
 * @param $id
 *   Mailing id
 * @return Culturefeed_Mailing
 *   Returns a mailing if found, else FALSE.
 */
function culturefeed_mailing_load($id) {
  try {
    return DrupalCultureFeed::getMailing($id);
  }
  catch (Exception $e) {
    return FALSE;
  }
}

/**
 * Load a culturefeed template.
 *
 * @param $id
 *   Template id
 * @return CultureFeed_Template
 *   Returns a template if found, else FALSE.
 */
function culturefeed_template_load($id) {
  try {
    return DrupalCultureFeed::getTemplate($id);
  }
  catch (Exception $e) {
    return FALSE;
  }
}
